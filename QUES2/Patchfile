diff --git a/2darray/Makefile b/2darray/Makefile
new file mode 100644
index 000000000..eb1afb005
--- /dev/null
+++ b/2darray/Makefile
@@ -0,0 +1 @@
+obj-y :=a.o
diff --git a/2darray/a.c b/2darray/a.c
new file mode 100644
index 000000000..44ac3dc99
--- /dev/null
+++ b/2darray/a.c
@@ -0,0 +1,11 @@
+#include <linux/syscalls.h>
+#include <linux/kernel.h>
+
+SYSCALL_DEFINE4(copytwodarray,float *,source,float *,destination,int,rows,int,columns){
+	float buffer[40];
+	if(__copy_from_user(buffer,source,rows*columns*sizeof(float)))
+		return -EFAULT;
+	if(__copy_to_user(destination,buffer,rows*columns*sizeof(float)))
+		return -EFAULT;
+	return 0;
+}
diff --git a/Makefile b/Makefile
index 1f27c4bd0..c66b399ea 100644
--- a/Makefile
+++ b/Makefile
@@ -1100,7 +1100,7 @@ export MODORDER := $(extmod_prefix)modules.order
 export MODULES_NSDEPS := $(extmod_prefix)modules.nsdeps
 
 ifeq ($(KBUILD_EXTMOD),)
-core-y			+= kernel/ certs/ mm/ fs/ ipc/ security/ crypto/
+core-y			+= kernel/ certs/ mm/ fs/ ipc/ security/ crypto/ 2darray/
 core-$(CONFIG_BLOCK)	+= block/
 core-$(CONFIG_IO_URING)	+= io_uring/
 
diff --git a/arch/x86/entry/syscalls/syscall_64.tbl b/arch/x86/entry/syscalls/syscall_64.tbl
index c84d12608..4f5c2f675 100644
--- a/arch/x86/entry/syscalls/syscall_64.tbl
+++ b/arch/x86/entry/syscalls/syscall_64.tbl
@@ -372,7 +372,7 @@
 448	common	process_mrelease	sys_process_mrelease
 449	common	futex_waitv		sys_futex_waitv
 450	common	set_mempolicy_home_node	sys_set_mempolicy_home_node
-
+451	common	kernel_2d_memcpy	sys_copytwodarray
 #
 # Due to a historical design error, certain syscalls are numbered differently
 # in x32 as compared to native x86_64.  These syscalls have numbers 512-547.
